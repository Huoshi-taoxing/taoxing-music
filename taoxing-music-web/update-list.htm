<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>桃星音乐 - 更新日志</title>
<link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&family=Exo+2:wght@300;400;600&display=swap" rel="stylesheet">
<style>
:root {
    --primary: #00e4ff;
    --secondary: #0ff0fc;
    --accent: #4a00e0;
    --dark: rgba(10, 15, 30, 0.85);
    --darker: rgba(5, 10, 20, 0.95);
    --glow: 0 0 15px rgba(0, 228, 255, 0.7);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background: 
        radial-gradient(circle at 10% 20%, rgba(10, 30, 50, 0.8) 0%, rgba(5, 15, 30, 0.9) 100%),
        linear-gradient(135deg, #00101a 0%, #001522 30%, #001a2e 70%, #00101a 100%);
    color: #e0f7fa;
    font-family: 'Exo 2', sans-serif;
    line-height: 1.7;
    min-height: 100vh;
    padding: 20px;
    position: relative;
    overflow-x: hidden;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        radial-gradient(circle at 20% 30%, rgba(0, 100, 255, 0.1) 0%, transparent 80%),
        radial-gradient(circle at 80% 70%, rgba(0, 200, 255, 0.1) 0%, transparent 80%);
    pointer-events: none;
    z-index: -1;
}

.star {
    position: absolute;
    background: white;
    border-radius: 50%;
    animation: twinkle var(--duration, 4s) infinite var(--delay, 0s);
}

@keyframes twinkle {
    0%, 100% { opacity: 0.2; }
    50% { opacity: 1; }
}

h1 {
    text-align: center;
    color: var(--primary);
    font-family: 'Orbitron', sans-serif;
    font-size: 2.8rem;
    margin: 2rem 0;
    text-shadow: 0 0 15px rgba(0, 228, 255, 0.8);
    position: relative;
    letter-spacing: 2px;
}

h1::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 250px;
    height: 3px;
    background: linear-gradient(90deg, transparent, var(--primary), transparent);
    box-shadow: var(--glow);
}

.section-title {
    font-size: 1.8rem;
    color: var(--secondary);
    margin: 3rem 0 1.5rem;
    padding: 10px 20px;
    background: var(--dark);
    border-left: 4px solid var(--primary);
    border-radius: 0 8px 8px 0;
    box-shadow: var(--glow);
    font-family: 'Orbitron', sans-serif;
    letter-spacing: 1px;
    position: relative;
    overflow: hidden;
}

.section-title::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 50%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(0, 228, 255, 0.3), transparent);
    animation: shine 3s infinite;
}

@keyframes shine {
    0% { left: -100%; }
    100% { left: 150%; }
}

.container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
}

.timeline {
    position: relative;
    padding: 40px 0;
}

.timeline::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 30px;
    width: 4px;
    background: linear-gradient(to bottom, transparent, var(--primary), var(--primary), transparent);
    box-shadow: var(--glow);
    z-index: 1;
}

.version {
    background: var(--dark);
    border: 1px solid rgba(0, 228, 255, 0.3);
    border-radius: 10px;
    padding: 25px;
    margin-bottom: 40px;
    margin-left: 70px;
    position: relative;
    transition: all 0.3s ease;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    overflow: hidden;
}

.version:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 228, 255, 0.3), 0 5px 15px rgba(0, 0, 0, 0.5);
    border-color: var(--primary);
}

.version::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(120deg, transparent, rgba(0, 228, 255, 0.05), transparent);
    z-index: -1;
}

.version::after {
    content: '';
    position: absolute;
    top: 25px;
    left: -60px;
    width: 30px;
    height: 30px;
    background: var(--darker);
    border: 3px solid var(--primary);
    border-radius: 50%;
    box-shadow: var(--glow);
    z-index: 2;
}

.version h2 {
    color: var(--primary);
    font-family: 'Orbitron', sans-serif;
    font-size: 1.5rem;
    margin-bottom: 15px;
    display: flex;
    align-items: center;
}

.version h2::before {
    content: '▶';
    color: var(--secondary);
    margin-right: 10px;
    font-size: 0.8em;
}

.version ul {
    list-style: none;
    padding-left: 0;
}

.version li {
    padding: 8px 0;
    padding-left: 25px;
    position: relative;
    border-bottom: 1px solid rgba(0, 228, 255, 0.1);
}

.version li:last-child {
    border-bottom: none;
}

.version li::before {
    content: '▹';
    position: absolute;
    left: 0;
    color: var(--secondary);
    font-size: 1.2em;
}

.version small {
    color: var(--secondary);
    font-size: 0.85rem;
    margin-left: 10px;
    text-shadow: 0 0 5px rgba(0, 228, 255, 0.7);
}

.terminal {
    background: var(--darker);
    border: 1px solid rgba(0, 228, 255, 0.3);
    border-radius: 8px;
    padding: 20px;
    margin-top: 40px;
    font-family: monospace;
    position: relative;
    overflow: hidden;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.7);
}

.terminal-header {
    display: flex;
    align-items: center;
    margin-bottom: 15px;
}

.terminal-dots {
    display: flex;
    margin-right: 10px;
}

.terminal-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 5px;
}

.terminal-dot:nth-child(1) { background: #ff5f56; }
.terminal-dot:nth-child(2) { background: #ffbd2e; }
.terminal-dot:nth-child(3) { background: #27c93f; }

.terminal-title {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
}

.terminal-content {
    color: var(--primary);
    line-height: 1.5;
}

.terminal-content::before {
    content: '> ';
    color: var(--secondary);
}

.scan-line {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(to right, transparent, rgba(0, 228, 255, 0.5), transparent);
    animation: scan 4s infinite linear;
}

@keyframes scan {
    0% { top: 0; }
    100% { top: 100%; }
}

@media (max-width: 768px) {
    .version {
        margin-left: 50px;
    }
    
    .timeline::before {
        left: 20px;
    }
    
    .version::after {
        left: -45px;
    }
    
    h1 {
        font-size: 2.2rem;
    }
}


       .button {
            position: fixed;
            top: 20px;
            left: 20px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: opacity 0.5s ease;
        }
        .button.fade-out {
            opacity: 0;
        }
</style>
</head>
<body>
 <button class="button" id="scrollButton">点击滚动到底部</button>
<div class="container">
    <h1>🌌 桃星音乐 更新日志</h1>
    
    <div class="section-title">桃星音乐 启动器</div>
    <div class="timeline">
        <div class="version">
            <h2>v1.1.0</h2>
            <ul>
                <li>首个版本发布</li>
                <li>支持个性化设置启动器透明度</li>
            </ul>
        </div>
        <div class="version">
            <h2>v1.2.0</h2>
            <ul>
                <li>启动器设置功能优化，解决 Bug 漏洞 与 安装所需文件</li>
            </ul>
        </div>
        <div class="version">
            <h2>v1.2.1</h2>
            <ul>
                <li>新增数据查看功能</li>
                <li>集成桃星音乐内部终端，方便调试与扩展</li>
            </ul>
        </div>

        <div class="version">
            <h2>v1.2.2</h2>
            <ul>
                <li>新增公告</li>
                <li>更新公告通知与已知的漏洞修复</li>
            </ul>
        </div>

        <div class="version">
            <h2>v1.2.3</h2>
            <ul>
                <li>高级化 加载</li>
                <li>流畅加载启动器优化壁纸比例</li>
            </ul>
        </div>

        <div class="version">
            <h2>v1.2.4</h2>
            <ul>
                <li>设置修改</li>
                <li>修复已知漏洞</li>
            </ul>
        </div>
        
    </div>

    <div class="section-title">桃星音乐 核心版本</div>
    <div class="timeline">
        <div class="version">
            <h2>v1.0 测试版</h2>
            <ul>
                <li>初始版本 测试</li>
            </ul>
        </div>
        <div class="version">
            <h2>v2.0 测试版</h2>
            <ul>
                <li>内容改为绿色</li>
                <li>支持自动播放下一首音乐</li>
                <li>本地音乐支持</li>
            </ul>
        </div>
        <div class="version">
            <h2>v3.0 最早发布</h2>
            <ul>
                <li>支持切换背景图壁纸</li>
                <li>背景图可添加动态动作效果</li>
            </ul>
        </div>
        <div class="version">
            <h2>v4.0 </h2>
            <ul>
                <li>新增视频壁纸功能，增加沉浸感</li>
                <li>修复已知 Bug</li>
            </ul>
        </div>
        <div class="version">
            <h2>v5.0</h2>
            <ul>
                <li>添加窗前雨滴</li>
                <li>界面升级</li>
            </ul>
        </div>
        <div class="version">
            <h2>v6.0 最终发布</h2>
            <ul>
                <li>界面全面大规模优化，高级化与梦幻化设计，内容颜色改为 青蓝色</li>
                <li>新增助眠音频（雨声、风铃等）</li>
                <li>新增定时关闭音乐功能</li>
                <li>支持删除不想听的音乐</li>
                <li>修复卡顿问题流畅运行</li>
            </ul>
        </div>
        <div class="version">
            <h2>v6.1 <small>(当前最新版本)</small></h2>
            <ul>
                <li>新增自动切换背景图功能</li>
                <li>修复最新Bug</li>
            </ul>
        </div>
    </div>
    
    <div class="terminal">
        <div class="scan-line"></div>
        <div class="terminal-header">
            <div class="terminal-dots">
                <div class="terminal-dot"></div>
                <div class="terminal-dot"></div>
                <div class="terminal-dot"></div>
            </div>
            <div class="terminal-title">$ admin/~</div>
        </div>
        <div class="terminal-content">Huoshi-Taoxing | 最新版本：v6.1 | Huoshi Taoxing </div>
    </div>
</div>

<script>
// 创建星空背景
function createStars() {
    const container = document.body;
    const starCount = 150;
    
    for (let i = 0; i < starCount; i++) {
        const star = document.createElement('div');
        star.classList.add('star');
        
        // 随机大小
        const size = Math.random() * 2 + 1;
        star.style.width = `${size}px`;
        star.style.height = `${size}px`;
        
        // 随机位置
        star.style.left = `${Math.random() * 100}%`;
        star.style.top = `${Math.random() * 100}%`;
        
        // 随机动画参数
        star.style.setProperty('--duration', `${Math.random() * 5 + 3}s`);
        star.style.setProperty('--delay', `${Math.random() * 5}s`);
        
        container.appendChild(star);
    }
}

// 添加悬停效果
function addHoverEffects() {
    const versions = document.querySelectorAll('.version');
    
    versions.forEach(version => {
        version.addEventListener('mouseenter', () => {
            const glow = document.createElement('div');
            glow.className = 'version-glow';
            glow.style.position = 'absolute';
            glow.style.top = '0';
            glow.style.left = '0';
            glow.style.width = '100%';
            glow.style.height = '100%';
            glow.style.background = 'radial-gradient(circle at center, rgba(0, 228, 255, 0.2), transparent 70%)';
            glow.style.borderRadius = '10px';
            glow.style.zIndex = '-1';
            version.appendChild(glow);
        });
        
        version.addEventListener('mouseleave', () => {
            const glow = version.querySelector('.version-glow');
            if (glow) {
                glow.remove();
            }
        });
    });
}

// 初始化
document.addEventListener('DOMContentLoaded', () => {
    createStars();
    addHoverEffects();
    
    // 添加终端内容动画
    const terminalContent = document.querySelector('.terminal-content');
    let count = 0;
    
    setInterval(() => {
        count = (count + 1) % 4;
        terminalContent.textContent = '> Huoshi Taoxing | 最新版本：v6.1 | Huoshi Taoxing' + '.'.repeat(count);
    }, 500);
});
</script>

    <script>
        const button = document.getElementById('scrollButton');
        button.addEventListener('click', function() {
            const scrollDuration = 50000;
            const scrollStep = (document.body.scrollHeight - window.scrollY) / (scrollDuration / 10);
            button.classList.add('fade-out');

            function animateScroll() {
                if (window.scrollY < document.body.scrollHeight) {
                    window.scrollBy(0, scrollStep);
                    requestAnimationFrame(animateScroll);
                }
            }
            animateScroll();
        });
    </script>
</body>
</html>
